namespace = spth_fleet

# 轨道轰炸： 100~200

# A ship has been built
# Root = Ship
# From = Planet
ship_event = {
    id = spth_fleet.1
    hide_window = yes
    is_triggered_only = yes
    trigger = {
        is_ship_size = spth_ur_didact_flagship
    }
    immediate = {
        set_ship_flag = has_ag_flagship
    }
}

#THIS/ROOT=planet##FROM=fleet
planet_event = {
    id = spth_fleet.2
    is_triggered_only = yes
    hide_window = yes

    immediate = {
        save_event_target_as = spth_composer_target
        from.owner = {
            set_variable = {
                which = spth_composer_composed_temp
                value = root.trigger:num_pops
            }
            if = {
                limit = { NOT = { is_variable_set = spth_composer_composed_pops } }
                set_variable = {
                    which = spth_composer_composed_pops
                    value = 0
                }
            }
            change_variable = {
                which = spth_composer_composed_pops
                value = spth_composer_composed_temp
            }
            clear_variable = spth_composer_composed_temp
        }
        hidden_effect = {
            if = {
                limit = {
                    exists = owner
                }
                owner = {
                    if = {
                        limit = {
                            #isn't the case when the crisis bombards planets, for instance
                            is_at_war_with = from.fleet.owner
                        }
                        add_static_war_exhaustion = {
                            attacker = from.fleet.owner
                            location = root
                            value_for_planet_destruction = 1.0
                        }
                    }
                }
            }
            if = {
                limit = {
                    has_observation_outpost = yes
                }
                observation_outpost_owner = {
                    country_event = { id = planet_destruction.1000 days = 1 }
                }
            }
            if = {
                limit = { is_capital = yes }
                from.owner = { set_country_flag = exterminatus }
            }
            if = {
                limit = {
                    exists = owner
                    owner = {
                        NOT = { is_same_value = from.owner }
                        OR = {
                            is_country_type = default
                            is_country_type = fallen_empire
                            is_country_type = awakened_fallen_empire
                        }
                    }
                }
                # Generate threat
                if = {
                    limit = {
                        is_colony = yes
                    }
                    add_threat = { who = from.owner amount = 3 }
                    # modifier for allies + those upset by genocide
                    every_country = {
                        limit = {
                            NOR = {
                                is_same_value = from.owner
                                is_same_value = root.owner
                                AND = {
                                    has_federation = yes
                                    is_in_federation_with = from.owner
                                }
                            }
                            OR = {
                                has_communications = from.owner
                                has_communications = root.owner
                            }
                            OR = {
                                AND = {
                                    has_federation = yes
                                    is_in_federation_with = root.owner
                                }
                                has_ai_personality = awakened_fallen_empire_xenophile
                                AND = {
                                    is_country_type = default
                                    OR = {
                                        is_egalitarian = yes
                                        is_xenophile = yes
                                    }
                                }
                            }
                        }
                        if = {
                            limit = { root = { is_colony = no } }
                            add_opinion_modifier = {
                                modifier = opinion_cracked_an_uninhabited_world
                                who = from.owner
                            }
                        }
                        else = {
                            add_opinion_modifier = {
                                modifier = opinion_cracked_a_world
                                who = from.owner
                            }
                        }
                    }
                }
                else = {
                    add_threat = { who = from.owner amount = 1 }
                }
                # modifiers for victim
                owner = {
                    if = {
                        limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
                        add_modifier = {
                            modifier = colossus_victim
                            days = 10800 # 30 years
                        }
                    }
                }
            }
        }
        every_owned_pop = {
            kill_pop = yes
        }
        destroy_colony = yes
    }
}

# kamikakushi - stole pops
# This = Planet
# From = Bombarder country
planet_event = {
    id = spth_fleet.100
    hide_window = yes
    is_triggered_only = yes
    trigger = {
        has_orbital_bombardment = yes
        has_orbital_bombardment_stance = spth_kamikakushi
        planet_devastation >= 90
    }
    immediate = {
        set_update_modifiers_batch = begin
        from = {
            if = {
                limit = { has_ascension_perk = ap_become_the_crisis }
                complete_crisis_objective = crisobj_destroy_worlds
            }
        }
        if = {
            limit = {
                is_planet_class = pc_ai
                NOT = { has_planet_flag = machine_lair }
            }
            set_planet_flag = destroyed_by_colossus
            set_planet_flag = planet_cracked
            planet_event = { id = crisis.2040 }
        }
        # stole pops
        if = {
            limit = {
                is_colony = yes
                num_pops >= 1
            }
            export_trigger_value_to_variable = {
                trigger = num_pops
                variable = spth_kamikakushi_colony_pops_counter
            }
            multiply_variable = { which = spth_kamikakushi_colony_pops_counter value = 0.5 }
            ceiling_variable = spth_kamikakushi_colony_pops_counter
            from = {
                random_owned_planet = {
                    limit = { is_colony = yes }
                    while = {
                        count = root.spth_kamikakushi_colony_pops_counter
                        create_pop = { species = owner_main_species }
                    }
                }
                capital_scope = {
                    while = {
                        count = root.spth_kamikakushi_colony_pops_counter
                        create_pop = { species = owner_main_species }
                    }
                }
            }
            clear_variable = spth_kamikakushi_colony_pops_counter
            destroy_colony = yes
        }
        # Contingency Final Machine World
        if = {
            limit = {
                is_planet_class = pc_ai
                has_planet_flag = machine_lair
            }
            set_planet_flag = destroyed_by_colossus
            set_planet_flag = planet_cracked
            from.owner = { save_event_target_as = final_machine_world_destroyer }
            stop_crisis_sound = yes
            planet_event = { id = crisis.2046 }
        }
        # Swarm Situation Log counter
        if = {
            limit = {
                exists = owner
                owner = { is_country_type = swarm }
            }
            every_country = {
                limit = { has_event_chain = "prethoryn_scourge_chain" }
                add_event_chain_counter = {
                    event_chain = "prethoryn_scourge_chain"
                    counter = "infested_worlds"
                    amount = -1
                }
                add_event_chain_counter = {
                    event_chain = "prethoryn_scourge_chain"
                    counter = "infested_worlds_cleansed"
                    amount = 1
                }
            }
        }

        if = {
            limit = { is_planet_class = pc_habitat }
            spawn_habitat_cracker_effect = yes
            # remove_planet = yes
        }
        else_if = {
            limit = { is_ringworld = yes }
            spawn_ringworld_cracker_effect = yes
            # change_pc = pc_ringworld_habitable_damaged
        } else = {
            from = {
                create_message = {
                    type = spth_kamikakushi_clear_planet
                    localization = spth_kamikakushi_clear_planet_desc
                    days = 30
                    target = root
                    variable = {
                        type = name
                        localization = PLANET
                        scope = root
                    }
                    variable = {
                        type = name
                        localization = COUNTRY_NAME
                        scope = this
                    }
                }
            }
        }
        add_deposit = d_food_3
        random_list = {
            1 = { while = { count = 8 add_deposit = d_sr_lingli_1 } }
            1 = { while = { count = 12 add_deposit = d_sr_lingli_1 } }
            1 = { while = { count = 16 add_deposit = d_sr_lingli_1 } }
        }
        every_owned_pop = { kill_pop = yes }
        set_update_modifiers_batch = end
        if = {
            limit = {
                NOR = {
                    is_planet_class = pc_ai
                    is_ringworld = yes
                    is_planet_class = pc_habitat
                }
                OR = {
                    is_artificial = no
                    is_planet_class = pc_gensokyo_city
                    is_planet_class = pc_gensokyo_planet
                }
            }
            add_deposit = d_city_ruins
            add_deposit = d_city_ruins
            add_deposit = d_dangerous_wildlife_blocker
            add_deposit = d_dangerous_wildlife_blocker
            add_deposit = d_dangerous_wildlife_blocker
            change_pc = pc_kamikakushi_planet
            from = {
                country_event = {
                    id = spth_fleet.101
                    scopes = {
                        from = root
                    }
                }
            }
        }
    }
}

# 神隐轰炸选择事件
# This = country
# From = planet
country_event = {
    id = spth_fleet.101
    is_triggered_only = yes
    trigger = {
        NOT = { has_country_flag = kamikakushi_planet_select_prevent }
        from = { is_planet_class = pc_kamikakushi_planet }
    }
    title = spth_fleet.101
    desc = spth_fleet.101.desc
    picture = GFX_evt_kamikakushi
    option = {
        name = spth_fleet.101.a
        default_hide_option = yes
    }
    option = {
        name = spth_fleet.101.b
        hidden_effect = {
            set_country_flag = kamikakushi_planet_select_prevent
        }
    }
}
