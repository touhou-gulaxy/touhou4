namespace = spth_colony

# monthly update current barrier capacity as a planet variable
country_event = {
	id = spth_colony.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_authority = auth_gensokyo
	}
	immediate = {
		every_owned_planet = {
			limit = { has_deposit = d_hakurei_barrier }
			set_variable = {
				which = planet_genso_job_buff_modifier
				value = value:planet_genso_job_buff_modifier
			}
			spth_count_to_be_converted_pops = yes
		}
	}
}

# update current barrier capacity as a planet variable when the save is loaded
event = {
	id = spth_colony.2
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_country = {
			limit = { has_authority = auth_gensokyo }
			country_event = { id = spth_colony.1 }
		}
	}
}

# monthly update current barrier capacity as a planet variable
planet_event = {
	id = spth_colony.100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = owner
		owner = { has_authority = auth_gensokyo }
		has_deposit = d_hakurei_barrier
	}
	
	immediate = {
		set_variable = {
			which = planet_genso_job_buff_modifier
			value = value:planet_genso_job_buff_modifier
		}
		spth_count_to_be_converted_pops = yes
	}
}

country_event = {
	id = spth_colony.3
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_authority = auth_gensokyo
		has_country_flag = spth_pop_convert_enabled
	}
	immediate = {
		every_owned_planet = {
			limit = { has_modifier = spth_planet_pop_convert }
			export_trigger_value_to_variable = {
				trigger = num_assigned_jobs
				parameters = {
					job = spth_to_be_converted
				}
				variable = to_be_converted_amount
			}
			every_owned_pop = {
				limit = {
					has_job = spth_to_be_converted
				}
				kill_pop = yes
			}
			while = {
				count = to_be_converted_amount
				create_pop = { species = root.owner_main_species }
			}
		}
	}
}