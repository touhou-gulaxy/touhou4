# ship_size_multiplier
# 1
# 快晴
# 	博丽灵梦
# 在空中飞行程度的天气
# 2
# 雾雨
# 	雾雨魔理沙
# 符卡就是火力程度的天气
# 3
# 云天
# 	十六夜咲夜
# 灵活地使用符卡程度的天气
# 4
# 苍天
# 	魂魄妖梦
# 连续技变得锐利程度的天气
# 5
# 雹
# 	爱丽丝·玛格特洛依德
# 灵力强化程度的天气
# 6
# 花云
# 	帕秋莉·诺蕾姬
# 能回避打击程度的天气
# 7
# 浓雾
# 	蕾米莉亚·斯卡蕾特
# 变得像吸血鬼程度的天气
# 8
# 雪
# 	西行寺幽幽子
# 变得像幽灵程度的天气
# 9
# 太阳雨
# 	八云紫
# 防御变得诡异程度的天气
# 10
# 疏雨
# 	伊吹萃香
# 必杀技全开程度的天气
# 11
# 风雨
# 	射命丸文
# 借助风之力程度的天气
# 12
# 晴岚
# 	铃仙·优昙华院·因幡
# 手卡不可见程度的天气
# 13
# 川雾
# 	小野塚小町
# 距离变得诡异程度的天气
# 14
# 台风
# 	永江衣玖
# 胜负变得疯狂程度的天气
# 15
# 极光
# 	比那名居天子
# 不知道会产生什么程度的天气

scarlet_weather_reimu_storm = {
    triggered_fleet_modifier = {
        potential = {
            always = yes
        }
        storm_base_modifier = 1
    }
    storm_min_radius = {
        base = 25
        modifier = {
            mult = value:storm_size_multiplier
        }
    }

    storm_max_radius = {
        base = 50
        modifier = {
            mult = value:storm_size_multiplier
        }
    }

    storm_min_steps = {
        set = value:storm_range_min
    }

    storm_max_steps = {
        set = value:storm_range_max
    }

    storm_speed = {
        base = 0.02
    }

    storm_activation_period_in_months = {
        base = 12
    }

    storm_monthly_added_devastation = {
        base = 0.2
    }

    spawn_weight = {
        base = 0
    }
    description = shroud_storm_lore_description

    ### positive effects ###

    triggered_fleet_modifier = {
        potential = {
            always = yes
        }
        modifier = {
            ship_evasion_mult = 1
            ship_evasion_add = 100
        }
    }

    ### negative effects ###

    triggered_planet_modifier = {
        potential = {
            always = yes
        }
        planet_jobs_produces_mult = -0.2
        mult = value:storm_resistant_production_multiplier
    }

    on_start = {
        every_system_within_storm = {
            added_to_storm_base_effect = yes
            scarlet_weather_storm_add = { type = reimu }
        }
    }

    on_finished = {
        every_system_within_storm = {
            removed_from_storm_base_effect = yes
            scarlet_weather_storm_remove = { type = reimu }
        }
    }

    on_moved = {
        every_system_added_to_storm = {
            added_to_storm_base_effect = yes
            scarlet_weather_storm_add = { type = reimu }
        }

        every_system_removed_from_storm = {
            removed_from_storm_base_effect = yes
            scarlet_weather_storm_remove = { type = reimu }
        }
    }
    cosmic_storm_texture_path = "gfx/map/storms/NebulaOpacity.dds"
    cosmic_storm_texture_color_path = "gfx/map/storms/gravity_storm_color.dds"
    cosmic_storm_event_sprite = "GFX_gravity_storm"
    icon = GFX_planetview_storm_gravity_modifier_frame

    cosmic_storm_texture_lightning_paths = {
        "gfx/map/storms/lightning/lightning_small_storm_01.dds"
        "gfx/map/storms/lightning/lightning_small_storm_02.dds"
        "gfx/map/storms/lightning/lightning_mid_storm_01.dds"
        "gfx/map/storms/lightning/lightning_mid_storm_02.dds"
    }

    cosmic_storm_galaxy_lightning_time = 10.0
    cosmic_storm_galaxy_max_opacity = 0.4
}
example_selector_storm = {
    triggered_fleet_modifier = {
        potential = {
            always = yes
        }
        storm_base_modifier = 1
    }
    storm_min_radius = {
        base = 1
    }

    storm_max_radius = {
        base = 1
    }

    storm_min_steps = {
        set = 1
    }

    storm_max_steps = {
        set = 1
    }

    storm_speed = {
        base = 0.02
    }

    storm_activation_period_in_months = {
        base = 12
    }

    storm_monthly_added_devastation = {
        base = 0.2
    }

    spawn_weight = {
        base = 0
    }
    description = shroud_storm_lore_description

    ### positive effects ###

    triggered_fleet_modifier = {
        potential = {
            always = yes
        }
        modifier = {
            ship_evasion_mult = 1
            ship_evasion_add = 100
        }
    }

    ### negative effects ###

    triggered_planet_modifier = {
        potential = {
            always = yes
        }
        planet_jobs_produces_mult = -0.2
        mult = value:storm_resistant_production_multiplier
    }

    on_start = {
        every_system_within_storm = {
            added_to_storm_base_effect = yes
            scarlet_weather_storm_add = { type = reimu }
        }
    }

    on_finished = {
        every_system_within_storm = {
            removed_from_storm_base_effect = yes
            scarlet_weather_storm_remove = { type = reimu }
        }
    }

    on_moved = {
        every_system_added_to_storm = {
            added_to_storm_base_effect = yes
            scarlet_weather_storm_add = { type = reimu }
        }

        every_system_removed_from_storm = {
            removed_from_storm_base_effect = yes
            scarlet_weather_storm_remove = { type = reimu }
        }
    }
    cosmic_storm_texture_path = "gfx/map/storms/NebulaOpacity.dds"
    cosmic_storm_texture_color_path = "gfx/map/storms/gravity_storm_color.dds"
    cosmic_storm_event_sprite = "GFX_gravity_storm"
    icon = GFX_planetview_storm_gravity_modifier_frame

    cosmic_storm_texture_lightning_paths = {
        "gfx/map/storms/lightning/lightning_small_storm_01.dds"
        "gfx/map/storms/lightning/lightning_small_storm_02.dds"
        "gfx/map/storms/lightning/lightning_mid_storm_01.dds"
        "gfx/map/storms/lightning/lightning_mid_storm_02.dds"
    }

    cosmic_storm_galaxy_lightning_time = 10.0
    cosmic_storm_galaxy_max_opacity = 0.4
}
