# planet scope
spth_trigger_planet_barrier_capacity_can_hold = {
}

spth_fleet_has_special_leader = {
    optimize_memory
    fromfrom = {
        exists = leader
        OR = {
            AND = {
                check_modifier_value = { modifier = fleet_th_has_tenshi value != 0 }
                NOT = { has_fleet_flag = has_tenshi_aura_effect }
            }
            AND = {
                check_modifier_value = { modifier = fleet_th_has_alice value != 0 }
                NOT = { prev = { has_country_flag = has_alice_effect_cooldown } }
            }
            AND = {
                check_modifier_value = { modifier = fleet_th_has_reisen value != 0 }
                NOT = { root.fromfromfrom = { has_fleet_flag = has_reisen_effect_fired } }
            }
            AND = {
                check_modifier_value = { modifier = fleet_th_has_kokoro value != 0 }
                NOT = { root.fromfromfrom = { has_fleet_flag = has_kokoro_effect_fired } }
            }
            check_modifier_value = { modifier = fleet_th_koishi_skill value != 0 }
        }
    }
}

spth_is_no_spawn_crisis_system = {
    optimize_memory
    OR = {
        has_star_flag = lcluster
        has_star_flag = wg_sealed_system
        has_star_flag = ag_no_jump_in_system
        has_star_flag = Kuat_empire_system
        has_star_flag = outercluster
        has_star_flag = kuat_initial_system
        has_star_flag = spth_enclave_system
        has_star_flag = spth_precursor_capital_makai
        has_star_flag = spth_system
        has_star_flag = ag_ancient_system
    }
}
spth_has_kamikakushi_crisis = {
    optimize_memory
    has_global_flag = spth_kamikaushi_crisis_start
    NOT = { has_global_flag = spth_kamikaushi_crisis_ended }
}

is_touhou_army = {
    optimize_memory
    check_modifier_value = { modifier = army_is_touhou_army value != 0 }
}

check_touhou_army_tier = {
    optimize_memory
    check_modifier_value = { modifier = army_is_touhou_army_t$tier$ value != 0 }
}

is_touhou_ship = {
    optimize_memory
    check_modifier_value = { modifier = ship_is_touhou_mod_ship value != 0 }
}
is_touhou_buildable_ship = {
    optimize_memory
    check_modifier_value = { modifier = ship_is_spth_buildable_ship value != 0 }
}
is_touhou_flagship = {
    optimize_memory
    check_modifier_value = { modifier = ship_is_spth_supercarrier value != 0 }
}
is_touhou_support_ship = {
    optimize_memory
    check_modifier_value = { modifier = ship_is_spth_support value != 0 }
}
is_touhou_common_ship = {
    optimize_memory
    check_modifier_value = { modifier = ship_is_spth_common_ship value != 0 }
}
is_touhou_country = {
    optimize_memory
    OR = {
        is_touhou_crisis_faction = yes
        is_touhou_other_faction = yes
        is_touhou_player_faction = yes
    }
}
is_touhou_player_faction = {
    optimize_memory
    has_authority = auth_gensokyo
}
is_touhou_crisis_faction = {
    optimize_memory
    OR = {
        is_country_type = spth_kamikakushi_invader
        is_country_type = spth_kamikakushi_diplomacy
        is_country_type = spth_kamikakushi_country
        is_country_type = spth_makai_defence_system_crisis
        is_country_type = spth_crisis_lunar_outpost
        is_country_type = spth_fallen_empire
        is_country_type = lunar_capital_remain_fleet
    }
}
is_touhou_other_faction = {
    optimize_memory
    OR = {
        is_country_type = kedama
        is_country_type = spth_enclave
        is_country_type = spth_makai_defence_system
    }
}

spth_combat_extra_life_check = {
    optimize_memory
    check_modifier_value = { modifier = ship_spth_extra_life value >= 1 }
    spth_not_trigger_extra_life = no
}
has_touhou_disable = {
    optimize_memory
    OR = {
        AND = {
            is_ship_size = TH_super_carrier
            check_variable = { which = spth_super_carrier_inv_counter value <= 4 }
        }
        has_touhou_invincible = yes
        check_modifier_value = { modifier = ship_spth_extra_life value >= 1 }
    }
}
has_touhou_invincible = {
    optimize_memory
    OR = {
        has_ship_flag = spth_super_carrier_destroyed_storm
        has_ship_flag = spth_invincible
    }
}
spth_ship_has_extra_life = {
    optimize_memory
    OR = {
        has_ship_flag = spth_super_carrier_sys_triggered
        has_touhou_invincible = yes
        check_modifier_value = { modifier = ship_spth_extra_life value >= 1 }
    }
}
spth_not_trigger_extra_life = {
    optimize_memory
    OR = {
        is_ship_size = TH_super_carrier
        # we do not check ancient titan.
        # and when ag_disable is activated, stop this check.
        ag_is_ancient_titan_alt = yes
        has_ship_flag = ag_set_disable_at_health
    }
}
spth_dynamic_ship_part_trigger = {
    optimize_memory
    fromfrom = { any_owned_ship = { check_modifier_value = { modifier = $type$ value != 0 } } }
    NOR = {
        fromfromfrom = {
            [[close_system_check] owner = { spth_should_close_combat_system = $close_system_check$ } ]
            any_owned_ship = {
                OR = {
                    check_modifier_value = { modifier = $type$ value != 0 }
                    check_modifier_value = { modifier = spth_kamikakushi_cruiser_arua value > 0 }
                    [[extra_modifier] check_modifier_value = { modifier = $extra_modifier$ value != 0 } ]
                }
            }
        }
    }
}
spth_always_remove_modifier_check = {
    optimize_memory
    OR = {
        AND = {
            exists = leader
            leader = { spth_is_touhou_gensokyo_leader = yes }
        }
        prev = {
            OR = {
                AND = {
                    is_ai = no
                    has_authority = auth_gensokyo
                }
                is_country_type = spth_country_type_container
                is_country_type = spth_crisis_lunar_outpost
                is_country_type = spth_fallen_empire
                is_country_type = spth_enclave
            }
        }
    }
}

spth_has_precursor_intro = {
    optimize_memory
    OR = {
        has_country_flag = touhou_makai_intro
        has_country_flag = touhou_lunar_intro
        AND = {
            has_origin = origin_shoulders_of_giants
            NOT = { has_country_flag = origin_shoulders_closure }
        }
    }
}

spth_is_touhou_deposit = {
    OR = {
        is_deposit_type = d_zhulin
        is_deposit_type = d_yokai_mountain
        is_deposit_type = d_sunshine_flower_field
        is_deposit_type = d_th_underway
        is_deposit_type = d_false_heaven_shield
        is_deposit_type = d_wifi_tower
        is_deposit_type = d_mosen
        is_deposit_type = d_spirit_power_spring
        is_deposit_type = d_hakurei_barrier
        is_deposit_type = d_hakurajinjia
        is_deposit_type = d_spth_lunar_capital_ruins
        is_deposit_type = d_spth_lunar_capital_centre_ruins
        is_deposit_type = d_spth_torifune_ruin
        is_deposit_type = d_spth_torifune_ruin_1
        is_deposit_type = d_spth_torifune_control_centre
        is_deposit_type = d_spth_torifune_wildlife
        is_deposit_type = d_megastructure_th_shrine_mega_1
        is_deposit_type = d_megastructure_th_shrine_mega_2
        is_deposit_type = d_makai_ringworld
        is_deposit_type = d_makai_alice_ruin
    }
}
spth_is_no_remove_deposit = {
    OR = {
        spth_is_touhou_deposit = yes
        # original deposits
        is_deposit_type = d_dust_caverns
        is_deposit_type = d_dust_desert
        is_deposit_type = d_bubbling_swamp
        is_deposit_type = d_fuming_bog
        is_deposit_type = d_crystalline_caverns
        is_deposit_type = d_crystal_forest
        is_deposit_type = d_crystal_reef
        # we should not remove the rare deposits
        has_deposit_category = deposit_cat_rare
        has_deposit_category = deposit_cat_rare_resource
        has_deposit_category = deposit_cat_rare_blocker
    }
}

is_koishi_critical_factor_low = {
    OR = {
        is_ship_size = frigate
        is_ship_size = corvette
        is_ship_size = destroyer
        is_ship_size = crisis_corvette
        is_ship_size = cosmo_crisis_destroyer
    }
}
is_koishi_critical_factor_mid = {
    OR = {
        is_ship_size = small_ship_fallen_empire
        is_ship_size = cruiser
        is_ship_size = crisis_destroyer
        is_ship_size = crisis_cruiser
    }
}
is_koishi_critical_factor_high = {
    OR = {
        is_ship_size = battleship
        is_ship_size = titan
        is_ship_size = large_ship_fallen_empire
        is_ship_size = massive_ship_fallen_empire
        is_ship_size = TH_battle_cruiser
        is_ship_size = cosmo_crisis_battlecruiser
        is_ship_size = cosmo_crisis_titan
    }
}
is_koishi_critical_factor_extra = {
    OR = {
        is_ship_class = shipclass_starbase
        is_ship_size = spth_ur_didact_flagship
        is_ship_size = spth_cr_dreadnought
        is_ship_size = colossus
        is_ship_size = star_eater
        is_ship_size = juggernaut
        is_ship_size = th_juggernaut
    }
}
is_koishi_original_ships = {
    OR = {
        is_ship_size = frigate
        is_ship_size = corvette
        is_ship_size = destroyer
        is_ship_size = crisis_corvette
        is_ship_size = cosmo_crisis_destroyer
        is_ship_size = small_ship_fallen_empire
        is_ship_size = cruiser
        is_ship_size = crisis_destroyer
        is_ship_size = crisis_cruiser
        is_ship_size = battleship
        is_ship_size = titan
        is_ship_size = large_ship_fallen_empire
        is_ship_size = massive_ship_fallen_empire
        is_ship_size = TH_battle_cruiser
        is_ship_size = cosmo_crisis_battlecruiser
        is_ship_size = cosmo_crisis_titan
    }
}
# 预留给幻想乡季节相关事件
# 如剧情线检测季节触发春雪异变
spth_is_specified_season = {
    optimize_memory
    OR = {
        [[winter] spth_is_winter = $winter$ ]
        [[spring] spth_is_spring = $spring$ ]
        [[summer] spth_is_summer = $summer$ ]
        [[autumn] spth_is_autumn = $autumn$ ]
    }
}
spth_is_winter = {
    optimize_memory
    fail_text = trigger_in_winter_failed
    success_text = trigger_in_winter_success
    OR = {
        check_variable_arithmetic = {
            which = value:spth_current_month
            value > 11
        }
        check_variable_arithmetic = {
            which = value:spth_current_month
            value < 3
        }
    }
}
spth_is_spring = {
    optimize_memory
    fail_text = trigger_in_spring_failed
    success_text = trigger_in_spring_success
    check_variable_arithmetic = {
        which = value:spth_current_month
        value > 2
    }
    check_variable_arithmetic = {
        which = value:spth_current_month
        value < 6
    }
}
spth_is_summer = {
    optimize_memory
    fail_text = trigger_in_summer_failed
    success_text = trigger_in_summer_success
    check_variable_arithmetic = {
        which = value:spth_current_month
        value > 5
    }
    check_variable_arithmetic = {
        which = value:spth_current_month
        value < 9
    }
}
spth_is_autumn = {
    optimize_memory
    fail_text = trigger_in_autumn_failed
    success_text = trigger_in_autumn_success
    check_variable_arithmetic = {
        which = value:spth_current_month
        value > 8
    }
    check_variable_arithmetic = {
        which = value:spth_current_month
        value < 12
    }
}
spth_has_crisis_effect_weapon = {
    optimize_memory
    OR = {
        has_component = spth_story_crisis_titan_kinetic_weapon
        has_component = spth_story_crisis_titan_energy_weapon
        has_component = spth_story_crisis_titan_generic_weapon
        has_component = spth_story_crisis_extra_kinetic_weapon
        has_component = spth_story_crisis_extra_energy_weapon
        has_component = spth_story_crisis_extra_generic_weapon
        has_component = spth_story_crisis_g_weapon
        has_component = spth_story_crisis_flagship_computer
        has_component = spth_story_crisis_dreadnought_computer
    }
}
spth_has_shield_armor_efficiency_component = {
    optimize_memory
    OR = {
        has_component = spth_story_crisis_dreadnought_computer
        has_component = spth_story_crisis_titan_energy_weapon
    }
}
# 引导信标检测
has_spth_bombardment_beacon = {
    optimize_memory
    NOT = { has_fleet_flag = has_spth_bombardment_support }
    any_owned_ship = {
        OR = {
            check_modifier_value = { modifier = ship_spth_bombardment_beacon value != 0 }
            has_ship_flag = has_spth_bombardment_beacon
        }
    }
}
# 跨星系火力检测
# 支援船最大射程为3
# this = combat fleet
can_enable_spth_bombardment_support = {
    optimize_memory
    # NOT = { any_owned_ship = { is_ship_size = spth_hv_bombardment_ship } }
    owner = {
        any_owned_fleet = {
            distance = {
                source = prevprev
                type = hyperlane
                max_jumps <= 3
            }
            any_owned_ship = {
                is_ship_size = spth_hv_bombardment_ship
            }
        }
    }
}
is_spth_bombardment_support_fleet = {
    optimize_memory
    distance = {
        source = prevprev
        type = hyperlane
        max_jumps <= 3
    }
    any_owned_ship = {
        is_ship_size = spth_hv_bombardment_ship
    }
}
spth_subcapital_allow_pretrigger = {
    optimize_memory
    OR = {
        spth_pop_group_amount >= 40
        has_building = building_spth_old_shirne
        has_building = building_spth_planet_shirne
        has_building = building_major_capital
        has_building = building_system_capital_nanotech
    }
}

# [CIVIC]
# this: any scope that can has owner
spth_check_gensokyo_auth = {
    exists = owner
    owner = {
        is_regular_empire = yes
        has_authority = auth_gensokyo
        [[CIVIC]
            has_civic = $CIVIC$
        ]
    }
}

spth_check_text_color = {
    optimize_memory
    custom_tooltip = {
        fail_text = spth_check_text_color_$color$_tt
        is_variable_set = $prefix|spth$_text_color
        check_variable = { which = $prefix|spth$_text_color value = @spth_scripted_color_$color$ }
    }
}

spth_puzzle_solving_check_char = {
    optimize_memory
    is_variable_set = spth_puzzle_solving_word_$spth_index$_$spth_pos$
    check_variable = {
        which = spth_puzzle_solving_word_$spth_index$_$spth_pos$
        value = $char$
    }
}
