# planet scope
spth_effect_establish_barrier = {
    optimize_memory
    if = {
        limit = {
            NOT = { has_deposit = d_hakurei_barrier }
        }
        add_deposit = d_hakurei_barrier
    }
    add_modifier = {
        modifier = spth_hakurei_barrier_info
    }
}

spth_effect_count_th_deposits = {
    optimize_memory
    export_trigger_value_to_variable = {
        trigger = count_deposit
        parameters = {
            limit = { is_deposit_type = $deposit$ }
        }
        variable = spth_count_deposit_$deposit$
    }
}

spth_effect_restore_th_deposits = {
    optimize_memory
    if = {
        limit = { is_variable_set = spth_count_deposit_$deposit$ }
        while = {
            count = spth_count_deposit_$deposit$
            add_deposit = $deposit$
        }
        clear_variable = spth_count_deposit_$deposit$
    }
}

spth_planet_season_effect = {
    optimize_memory
    if = {
        limit = { spth_is_$season$ = yes }
        if = {
            limit = { NOT = { has_modifier = spth_story_in_$season$ } }
            add_modifier = { modifier = spth_story_in_$season$ }
        }
        spth_planet_$season$_remove_season = yes
    }
}
spth_planet_spring_remove_season = {
    optimize_memory
    if = {
        limit = { has_modifier = spth_story_in_summer }
        remove_modifier = spth_story_in_summer
    }
    if = {
        limit = { has_modifier = spth_story_in_autumn }
        remove_modifier = spth_story_in_autumn
    }
    if = {
        limit = { has_modifier = spth_story_in_winter }
        remove_modifier = spth_story_in_winter
    }
}
spth_planet_summer_remove_season = {
    optimize_memory
    if = {
        limit = { has_modifier = spth_story_in_spring }
        remove_modifier = spth_story_in_spring
    }
    if = {
        limit = { has_modifier = spth_story_in_autumn }
        remove_modifier = spth_story_in_autumn
    }
    if = {
        limit = { has_modifier = spth_story_in_winter }
        remove_modifier = spth_story_in_winter
    }
}
spth_planet_autumn_remove_season = {
    optimize_memory
    if = {
        limit = { has_modifier = spth_story_in_summer }
        remove_modifier = spth_story_in_summer
    }
    if = {
        limit = { has_modifier = spth_story_in_spring }
        remove_modifier = spth_story_in_spring
    }
    if = {
        limit = { has_modifier = spth_story_in_winter }
        remove_modifier = spth_story_in_winter
    }
}
spth_planet_winter_remove_season = {
    optimize_memory
    if = {
        limit = { has_modifier = spth_story_in_summer }
        remove_modifier = spth_story_in_summer
    }
    if = {
        limit = { has_modifier = spth_story_in_autumn }
        remove_modifier = spth_story_in_autumn
    }
    if = {
        limit = { has_modifier = spth_story_in_spring }
        remove_modifier = spth_story_in_spring
    }
}

spth_reset_planet_deposits_effect = {
    optimize_memory
    spth_effect_count_th_deposits = { deposit = d_zhulin }
    spth_effect_count_th_deposits = { deposit = d_yokai_mountain }
    spth_effect_count_th_deposits = { deposit = d_sunshine_flower_field }
    spth_effect_count_th_deposits = { deposit = d_th_underway }
    spth_effect_count_th_deposits = { deposit = d_false_heaven_shield }
    spth_effect_count_th_deposits = { deposit = d_wifi_tower }
    spth_effect_count_th_deposits = { deposit = d_mosen }
    clear_deposits = yes
    spth_effect_restore_th_deposits = { deposit = d_zhulin }
    spth_effect_restore_th_deposits = { deposit = d_yokai_mountain }
    spth_effect_restore_th_deposits = { deposit = d_sunshine_flower_field }
    spth_effect_restore_th_deposits = { deposit = d_th_underway }
    spth_effect_restore_th_deposits = { deposit = d_false_heaven_shield }
    spth_effect_restore_th_deposits = { deposit = d_wifi_tower }
    spth_effect_restore_th_deposits = { deposit = d_mosen }
}
spth_change_pc_gensokyo_city_effect = {
    optimize_memory
    if = {
        limit = { has_modifier = spth_hakurei_barrier_info }
        add_deposit = d_hakurei_barrier
    }
    change_pc = pc_gensokyo_city
    set_planet_entity = {
        entity = "gensokyo_city_entity"
        graphical_culture = owner
    }
    this = {
        save_event_target_as = spth_new_gensokyo_planet
    }
    owner = {
        switch = {
            trigger = has_country_flag
            spth_scarlet_start = {
                event_target:spth_new_gensokyo_planet = {
                    create_ambient_object = {
                        type = "spth_scarlet_city_object"
                        entity_offset_height = {
                            min = -35
                            max = -40
                        }
                        location = this
                    }
                    last_created_ambient_object = {
                        set_location = {
                            target = event_target:spth_new_gensokyo_planet
                        }
                    }
                }
            }
            spth_hakurei_start = {
                event_target:spth_new_gensokyo_planet = {
                    create_ambient_object = {
                        type = "spth_hakurei_city_object"
                        entity_offset_height = {
                            min = -35
                            max = -40
                        }
                        location = this
                    }
                    last_created_ambient_object = {
                        set_location = {
                            target = event_target:spth_new_gensokyo_planet
                        }
                    }
                }
            }
        }
    }
}
spth_change_pc_gensokyo_planet_effect = {
    optimize_memory
    if = {
        limit = { has_modifier = spth_hakurei_barrier_info }
        add_deposit = d_hakurei_barrier
    }
    change_pc = pc_gensokyo_planet
    set_planet_entity = {
        entity = "gensokyo_city_entity"
        graphical_culture = owner
    }
    this = {
        save_event_target_as = spth_new_gensokyo_planet
    }
    owner = {
        switch = {
            trigger = has_country_flag
            spth_moriya_start = {
                event_target:spth_new_gensokyo_planet = {
                    create_ambient_object = {
                        type = "spth_moriya_city_object"
                        entity_offset_height = {
                            min = -35
                            max = -40
                        }
                        location = this
                    }
                    last_created_ambient_object = {
                        set_location = {
                            target = event_target:spth_new_gensokyo_planet
                        }
                    }
                }
            }
            spth_hakurei_start = {
                event_target:spth_new_gensokyo_planet = {
                    create_ambient_object = {
                        type = "spth_hakurei_city_object"
                        entity_offset_height = {
                            min = -35
                            max = -40
                        }
                        location = this
                    }
                    last_created_ambient_object = {
                        set_location = {
                            target = event_target:spth_new_gensokyo_planet
                        }
                    }
                }
            }
        }
    }
}
spth_change_pc_gensokyo_ringworld_effect = {
    optimize_memory
    if = {
        limit = { has_modifier = spth_hakurei_barrier_info }
        add_deposit = d_hakurei_barrier
    }
    remove_all_districts = yes
    change_pc = pc_ringworld_th
    set_planet_entity = {
        entity = "ringworld_habitable_entity"
        graphical_culture = owner
    }
}
