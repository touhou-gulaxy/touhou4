# planet scope
count_planet_add_miko = {
	modifier = {
		add = 1
		has_active_building = building_colony_shelter
	}
	modifier = {
		add = 1
		has_active_building = building_capital
	}
	modifier = {
		add = 2
		has_active_building = building_major_capital
	}
	modifier = {
		add = 3
		has_active_building = building_system_capital
	}
	modifier = {
		add = 4
		has_active_building = building_imperial_capital
	}
	modifier = {
		add = 4
		has_active_building = building_spth_old_shirne
	}
	modifier = {
		add = 5
		has_active_building = building_spth_planet_shirne
	}
	# 涅槃圣权
	modifier = {
		add = 4
		has_active_building = building_ancient_palace
	}
	modifier = {
		add = 5
		has_active_building = building_nirvana_empire_palace
	}
	modifier = {
		add = 1
		has_active_building = building_hab_capital
	}
	modifier = {
		add = 2
		has_active_building = building_hab_major_capital
	}
	modifier = {
		add = 3
		has_active_building = building_hab_system_capital
	}
	modifier = {
		add = 1
		has_active_building = building_resort_capital
	}
	modifier = {
		add = 2
		has_active_building = building_resort_major_capital
	}
	modifier = {
		add = 1
		has_active_building = building_slave_capital
	}
	modifier = {
		add = 2
		has_active_building = building_slave_major_capital
	}
}
# scope: planet
planet_genso_job_buff_modifier = {
	base = 1
	add = modifier:planet_barrier_capacity_add
	subtract = modifier:planet_barrier_capacity_use
	ceiling = yes
	min = 0
	max = 1
}
# scope: planet
planet_available_barrier_capacity = {
	base = 1
	add = modifier:planet_barrier_capacity_add
	subtract = modifier:planet_barrier_capacity_use
	min = 0
	max = 1
}
# scope: planet
planet_base_faith_strength = {
	base = 0
	add = trigger:num_sapient_pops
	modifier = {
		owner = {
			has_ascension_perk = ap_toho2
		}
		multiply = 1.2
	}
	modifier = {
		owner = {
			has_ascension_perk = ap_toho3
		}
		multiply = 1.2
	}
	modifier = {
		owner = {
			has_ascension_perk = ap_toho4
		}
		multiply = 1.2
	}
	min = 0
}
# scope: planet
planet_faith_sum = {
	base = 0
	add = modifier:planet_faith_strength_add
	add = value:planet_base_faith_strength
	min = 0
}
# scope: planet
planet_barrier_pressure_ratio = {
	base = 1
	multiply = modifier:planet_barrier_capacity_use
	divide = modifier:planet_barrier_capacity_add
	min = 0
	max = 3
}
# scope: planet
# update planet's planet_barrier_pressure_ratio variable before using this
planet_weak_genso_job_produce_barrier_modifier = {
	base = 0
	add = value:planet_barrier_pressure_ratio
	subtract = 1.5
	square = yes
	multiply = -1
	add = 1.25
	modifier = {
		check_variable = {
			which = planet_barrier_pressure_ratio
			value <= 1
		}
		set = 1
	}
	modifier = {
		check_variable = {
			which = planet_barrier_pressure_ratio
			value >= 2.5
		}
		set = 0.25
	}
	min = 0
}
# scope: planet
# 最终输出的弱产出加成倍率
planet_weak_genso_job_produce_faith_modifier = {
	base = 0
	add = value:planet_base_faith_strength
	add = modifier:planet_faith_strength_add
	square_root = yes
	divide = 20
	multiply = value:planet_weak_genso_job_produce_barrier_modifier
	min = 0
	# add = 1
}
# scope: planet
# 最终输出的强产出加成倍率
planet_strong_genso_job_produce_faith_modifier = {
	base = 0
	add = value:planet_base_faith_strength
	add = modifier:planet_faith_strength_add
	square_root = yes
	divide = 10
	multiply = value:planet_weak_genso_job_produce_barrier_modifier
	min = 0
	# add = 1
}
# scope: planet
planet_weak_genso_job_upkeep_barrier_modifier = {
	base = 0
	add = value:planet_barrier_pressure_ratio
	subtract = 1
	min = 0
	square_root = yes
	add = 1
	modifier = {
		check_variable = {
			which = planet_barrier_pressure_ratio
			value <= 1
		}
		set = 1
	}
	min = 1
}
# scope: planet
# 最终输出的弱维护费加成倍率
planet_weak_genso_job_upkeep_faith_modifier = {
	base = 0
	add = value:planet_base_faith_strength
	add = modifier:planet_faith_strength_add
	square_root = yes
	divide = 18
	multiply = value:planet_weak_genso_job_upkeep_barrier_modifier
	min = 0
	# add = 1
}
# scope: planet
# 最终输出的强维护费加成倍率
planet_strong_genso_job_upkeep_faith_modifier = {
	base = 0
	add = value:planet_base_faith_strength
	add = modifier:planet_faith_strength_add
	square_root = yes
	divide = 9
	multiply = value:planet_weak_genso_job_upkeep_barrier_modifier
	min = 0
	# add = 1
}
# scope: planet
planet_part1_sp_upkeep_faith_pressure_modifier = {
	base = -20
	add = modifier:planet_faith_strength_pressure
	min = 0
	mult = 0.01
}
# scope: planet
planet_part2_sp_upkeep_faith_pressure_modifier = {
	base = -20
	subtract = modifier:planet_faith_strength_add
	subtract = value:planet_base_faith_strength
	add = modifier:planet_faith_strength_pressure
	min = 0
	mult = 0.04
}
# scope: planet
# 最终输出的灵力维护费倍率
planet_sp_upkeep_faith_pressure_modifier = {
	base = 1
	add = value:planet_part1_sp_upkeep_faith_pressure_modifier
	add = value:planet_part2_sp_upkeep_faith_pressure_modifier
}
# scope: planet
spth_police_station_factor = {
	base = 0
	add = trigger:num_pops
	square_root = yes
	multiply = planet_weak_genso_job_produce_barrier_modifier
	min = 0
}
# 人口组装速度倍率
# (1+0.10*(岗位/sqrt(人口)))*(1+0.1*龙神像启用数量)
planet_genso_cloner_modifier = {
	base = 0
	modifier = {
		free_jobs > 0
		add = trigger:free_jobs
	}
	divide = value:planet_genso_cloner_divider
	multiply = 0.10
	add = 1
	modifier = {
		OR = {
			free_jobs <= 300
			free_housing <= 600
		}
		multiply = 0
	}
	multiply = value:planet_genso_cloner_buf
	modifier = {
		NOT = { has_deposit = d_hakurei_barrier }
		mult = 0.5
	}
	min = 0
	max = 8
}
planet_genso_cloner_divider = {
	base = 1
	add = trigger:num_pops
	square_root = yes
}
# 同类型建筑加成
planet_genso_cloner_buf = {
	base = 0
	complex_trigger_modifier = {
		trigger = num_buildings
		parameters = { type = building_spth_cloner disabled = no }
		multiplier = 0.10
		mode = add
	}
	add = 1
	min = 0
}
# 士兵岗位统计
planet_genso_soldier_counter = {
	base = 0
	complex_trigger_modifier = {
		trigger = num_assigned_jobs
		parameters = {
			job = soldier
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = num_assigned_jobs
		parameters = {
			job = genso_enforcer
		}
		mode = add
	}
	multiply = value:planet_weak_genso_job_produce_barrier_modifier
	min = 0
}

# 研究中心加成
# [2, 3.2]*ceil(sqrt(人口数)*(1+结界承载力使用/max(1, 结界承载力))*结界承载力人口buff)
# 均为planet scope
planet_genso_research_buff_capacity_add_factor = {
	base = 0
	add = modifier:planet_barrier_capacity_add
	min = 1
}
planet_genso_research_buff_capacity_factor = {
	base = 0
	add = modifier:planet_barrier_capacity_use
	divide = value:planet_genso_research_buff_capacity_add_factor
	add = 1
}
planet_genso_research_buff_building_factor = {
	base = 1
	complex_trigger_modifier = {
		trigger = num_buildings
		parameters = {
			type = building_spth_research_base_1
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = num_buildings
		parameters = {
			type = building_spth_research_lab_engineering
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = num_buildings
		parameters = {
			type = building_spth_research_lab_physics
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = num_buildings
		parameters = {
			type = building_spth_research_lab_society
		}
		mode = add
	}
	max = 5.76
}
planet_genso_research_buff_modifier = {
	base = 0
	add = trigger:num_pops
	multiply = value:planet_genso_research_buff_building_factor
	square_root = yes
	multiply = value:planet_genso_research_buff_capacity_factor
	ceiling = yes
	multiply = 2.4
	min = 1
	max = 120
}
spth_planet_reactor_upkeep_mult = {
    base = 0
    modifier = {
        NOT = { is_variable_set = spth_planet_reactor_upkeep_mult }
        add = 50
    }
    add = planet.spth_planet_reactor_upkeep_mult
    min = 0
}
spth_planet_reactor_procude_mult = {
    base = 0
    add = value:spth_planet_reactor_upkeep_mult
    square_root = yes
    multiply = 5
    min = 0
}

spth_num_chip_slave_raw = {
	base = 0
	complex_trigger_modifier = {
		trigger = count_owned_pop
		trigger_scope = planet
		mode = add
	}
}
spth_num_chip_slave = {
	base = 0
	complex_trigger_modifier = {
		trigger = count_owned_pop
		trigger_scope = planet
		mode = add
	}
	divide = $divide$
}
spth_num_chip_slave_sqrt = {
	base = 0
	complex_trigger_modifier = {
		trigger = count_owned_pop
		trigger_scope = planet
		mode = add
	}
	square_root = yes
}
spth_num_chip_slave_display = {
	base = 0
	complex_trigger_modifier = {
		trigger = count_owned_pop
		trigger_scope = planet
		mode = add
	}
	mult = $mul$
}
spth_convert_rate_produce_add_districts = {
	base = 1
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = { type = $district$ }
		mode = mult
	}
	min = 1
}
spth_convert_rate_produce_add = {
	base = 0
	add = value:spth_num_chip_slave|divide|20|
	add = value:spth_convert_rate_produce_add_districts|district|$district$|
}

# 感谢涅托
gensokyo_planet_drp_mult_genso = {
	base = 0
	add = 1
	modifier = {
		planet = { is_variable_set = planet_weak_genso_job_produce_faith_modifier }
		add = planet.planet_weak_genso_job_produce_faith_modifier
	}
}
gensokyo_planet_upkeep_mult_genso = {
	base = 0
	add = 1
	modifier = {
		planet = { is_variable_set = planet_weak_genso_job_upkeep_faith_modifier }
		add = planet.planet_weak_genso_job_upkeep_faith_modifier
	}
}
gensokyo_planet_drp_factor_pops = {
	base = 0
	add = trigger:num_pops
	mult = 0.01
	add = 1
}
gensokyo_planet_drp_factor_faith = {
	base = 1
	add = planet.planet_faith_sum
	mult = 0.1
	square_root = yes
	complex_trigger_modifier = {
		potential = {
			planet = {
				has_planetary_ascension_tier > 1
				has_planetary_ascension_tier < 11
			}
		}
		trigger_scope = planet
		trigger = has_planetary_ascension_tier
		mode = add
		mult = 0.01
	}
	modifier = {
		has_planetary_ascension_tier > 10
		add = 1
	}
}
gensokyo_planet_drp_factor = {
	base = 0
	add = value:gensokyo_planet_drp_factor_faith
	divide = 100
	mult = value:gensokyo_planet_drp_factor_pops
	round = yes
	abs = yes
}
gensokyo_planet_drp_mult = {
	base = 0
	complex_trigger_modifier = {
		trigger_scope = planet
		trigger = num_districts
		parameters = { type = $districts$ }
		mode = add
		mult = 0.1
	}
	complex_trigger_modifier = {
		trigger_scope = planet
		trigger = num_buildings
		parameters = { type = $buildings|any$ }
		mode = mult
	}
	add = modifier:planet_jobs_produces_mult
	[[rss] add = modifier:planet_jobs_$rss$_produces_mult ]
	[[category] add = modifier:planet_jobs_$category$_produces_mult ]
	[[rss_category] add = modifier:planet_$rss_category$_produces_mult ]
	add = modifier:planet_jobs_upkeep_mult
	[[job]
		complex_trigger_modifier = {
			trigger_scope = planet
			trigger = count_owned_pop
			parameters = { limit = { has_job = $job$ } }
			mode = mult
			mult = $jobsup|0.3$
		}
	]
	[[modifier]
		complex_trigger_modifier = {
			trigger = check_modifier_value
			parameters = { modifier = $modifier$ }
			mode = add
			mult = -1
		}
	]
	complex_trigger_modifier = {
		trigger_scope = planet
		trigger = has_planetary_ascension_tier
		mode = add
		mult = $planet_tier|10$
		potential ={ has_planetary_ascension_tier > 0 }
	}
	modifier = {
		planet = { is_variable_set = gensokyo_planet_drp_factor }
		add = planet.gensokyo_planet_drp_factor
	}
	mult = value:gensokyo_planet_drp_mult_genso
	mult = 0.5
}

gensokyo_planet_upkeep_mult = {
	base = 0
	complex_trigger_modifier = {
		trigger_scope = planet
		trigger = num_districts
		parameters = { type = $districts$ }
		mode = add
		mult = 0.1
	}
	complex_trigger_modifier = {
		trigger_scope = planet
		trigger = num_buildings
		parameters = { type = $buildings|any$ }
		mode = mult
	}
	add = modifier:planet_jobs_produces_mult
	[[rss] add = modifier:planet_jobs_$rss$_produces_mult ]
	[[category] add = modifier:planet_jobs_$category$_produces_mult ]
	[[rss_category] add = modifier:planet_$rss_category$_produces_mult ]
	add = modifier:planet_jobs_upkeep_mult
	[[job]
		complex_trigger_modifier = {
			trigger_scope = planet
			trigger = count_owned_pop
			parameters = { limit = { has_job = $job$ } }
			mode = mult
			mult = $jobsup|0.5$
		}
	]
	[[modifier]
		complex_trigger_modifier = {
			trigger = check_modifier_value
			parameters = { modifier = $modifier$ }
			mode = add
			mult = -1
		}
	]
	complex_trigger_modifier = {
		trigger_scope = planet
		trigger =has_planetary_ascension_tier
		mode = add
		mult = $planet_tier|10$
		potential ={ has_planetary_ascension_tier > 0 }
	}
	modifier = {
		planet = { is_variable_set = gensokyo_planet_drp_factor }
		add = planet.gensokyo_planet_drp_factor
	}
	mult = value:gensokyo_planet_upkeep_mult_genso
	mult = 0.5
}
